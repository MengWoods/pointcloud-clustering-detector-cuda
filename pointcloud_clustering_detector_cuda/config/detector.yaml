# ===================================================================
# Configuration File for Pointcloud Clustering Detector Cuda
# ===================================================================

# -------------------------------------------------------------------
# GENERAL SETTINGS
# -------------------------------------------------------------------
# Global settings for the main application loop.

verbose: false        # Enable/disable detailed console output for the main application.
timer: false           # Enable/disable performance timers for each processing step.
frequency: 15         # Target loop frequency in Hz. The program will pause to not exceed this rate.

# -------------------------------------------------------------------
# DATA LOADER SETTINGS
# -------------------------------------------------------------------
# Configure the source of the point cloud data.

point_cloud_loader:
  verbose: false      # Print debug information specific to the data loader.
  point_cloud_paths:  # List of paths to the KITTI velodyne_points/data directories.
    - /home/mh/Documents/kitti/2011_09_26_drive_0101_sync/2011_09_26/2011_09_26_drive_0101_sync/velodyne_points/data
    - /home/mh/Documents/kitti/2011_09_29_drive_0071_sync/2011_09_29/2011_09_29_drive_0071_sync/velodyne_points/data
    - /home/mh/Documents/kitti/2011_09_30_drive_0033_sync/2011_09_30/2011_09_30_drive_0033_sync/velodyne_points/data
  point_cloud_type: xyzi # Point format. Options: xyzi, xyz, xyi, xyzrgb

# -------------------------------------------------------------------
# PRE-PROCESSING FILTERS
# -------------------------------------------------------------------
# Filters applied to the raw point cloud before ground estimation.

box_filter_ransac:
  enable: true       # If true, keeps only points within the defined XYZ box.
  xmin: -10.0         # Minimum X coordinate (meters).
  xmax: 10.0          # Maximum X coordinate (meters).
  ymin: -6.0         # Minimum Y coordinate (meters).
  ymax: 6.0          # Maximum Y coordinate (meters).
  zmin: -3.0          # Minimum Z coordinate (meters).
  zmax: 1.0           # Maximum Z coordinate (meters).

box_filter_detector:
  enable: true       # If true, keeps only points within the defined XYZ box.
  xmin: -10.0         # Minimum X coordinate (meters).
  xmax: 30.0          # Maximum X coordinate (meters).
  ymin: -20.0         # Minimum Y coordinate (meters).
  ymax: 20.0          # Maximum Y coordinate (meters).
  zmin: -2.0          # Minimum Z coordinate (meters).
  zmax: 3.0           # Maximum Z coordinate (meters).

voxel_filter_ransac:
  enable: true        # If true, downsamples the point cloud using a voxel grid.
  voxel_size: 0.30    # The size of each voxel in meters. Larger values reduce points more.

voxel_filter_detector:
  enable: true        # If true, downsamples the point cloud using a voxel grid.
  voxel_size: 0.10    # The size of each voxel in meters. Larger values reduce points more.

noise_filter:
  enable: false        # If true, removes points considered to be statistical outliers.
  mean_k: 10          # Number of nearest neighbors to analyze for each point.
  std_dev: 2.0        # Standard deviation multiplier threshold. Points with a distance larger
                      # than this multiplier of the mean distance will be removed.

# -------------------------------------------------------------------
# CORE ALGORITHMS
# -------------------------------------------------------------------
# Settings for the main ground estimation logic.

ransac:
  distance_threshold: 0.1  # Max distance (meters) for a point to be considered an inlier to the plane.
  max_iterations: 400      # Number of random samples to draw. Higher values increase the chance
                           # of finding the optimal plane but increase computation time.
  min_points: 40           # Minimum number of points required for the RANSAC algorithm to run.
  timer: false             # Enable/disable a specific timer for just the RANSAC function.

ground_estimation:
  enable: true             # Master switch for the entire ground estimation process.
  verbose: true            # Print debug info for the ground estimation logic.
  max_angle: 20.0          # Max angle (degrees) between a plane's normal and the Z-axis to be
                           # considered a valid ground plane. Prevents walls/ramps from being chosen.
  max_height: 2.0          # Max height (meters) of the ground plane's 'd' coefficient.
  min_points: 30           # Minimum number of points required in the cloud for estimation to proceed.
  z_offset: 0.05            # An offset (meters) to vertically adjust the final ground plane.

  temporal_filter:
    enable: true            # If true, applies a temporal filter to stabilize the ground plane estimate.
    method: "kalman_filter" # moving_average | kalman_filter
    moving_average:
      buffer_size: 10           # Number of recent planes to average for stability.
    kalman_filter:
      # process_noise / measurement_noise: high value more responsive to changes, low value more stable.
      # High value will adapt to changes quickly, low value will be more stable.
      process_noise: 0.8       # Process noise covariance for the Kalman filter.
      # High value increases smoothness, low value allows more noise.
      measurement_noise: 0.1    # Measurement noise covariance for the Kalman filter.
      # High value means the fitler starts with very low confidence in the initial state.
      initial_covariance: 2.0   # Initial covariance for the Kalman filter.

  wall_filter:
    enable: false          # If true, attempts to detect and filter out vertical walls before re-running RANSAC.
    max_rerun_times: 3     # Max number of times to rerun RANSAC after filtering a wall.
    threshold: 0.2         # Distance threshold (meters) for filtering points near a detected wall.
    angle_threshold: 30    # Angle (degrees) to classify a plane as a wall. If the plane's normal
                           # is more horizontal than this, it's considered a wall.

# -------------------------------------------------------------------
# VISUALIZATION
# -------------------------------------------------------------------
# Settings for the PCL visualizer window.

point_cloud_visualizer:
  enable: true             # If true, opens a PCL window to visualize the results.
  camera_distance: 30.0    # Initial camera distance from the origin (meters).
  angle: 160.0             # Initial camera angle (degrees) around the vertical axis.
  refresh_interval: 10     # Time (ms) between viewer updates. Lower is faster.

# -------------------------------------------------------------------
# OBJECT DETECTION
# -------------------------------------------------------------------
# Settings for the point cloud clustering based object detection.

object_detector:
  enable: true
  use_cuda: true      # If true, uses the CUDA-based clustering implementation.
  cluster_tolerance: 0.5
  min_cluster_size: 50
  max_cluster_size: 5000
